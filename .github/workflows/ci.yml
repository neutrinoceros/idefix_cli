name: CI
on:
  push:
    branches:
    - main
  pull_request:
    paths-ignore:
    - .pre-commit-config.yaml
  workflow_dispatch:

jobs:
  tests:
    name: Python ${{ matrix.python-version }} on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-latest
        - macos-latest
        - windows-latest
        python-version:
        - '3.10'
        - '3.11'
        - '3.12'
        - '3.13'

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: astral-sh/setup-uv@887a942a15af3a7626099df99e897a18d9e5ab3a # v5.1.0
      with:
        python-version: ${{ matrix.python-version }}
    - name: Run tests
      run: uv run --frozen --no-editable --group test pytest --color=yes

  future:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
        - 3.14-dev
        - 3.13t

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    # TODO: ditch Quansight-Labs/setup-python when either condition is met
    # - setup-uv support Python pre-releases
    # - actions/setup-python support free-threaded versions
    # see https://github.com/actions/setup-python/issues/771
    - uses: Quansight-Labs/setup-python@b9ab292c751a42bcd2bb465b7fa202ea2c3f5796 # v5.3.1
      with:
        python-version: ${{ matrix.python-version }}
    - uses: astral-sh/setup-uv@887a942a15af3a7626099df99e897a18d9e5ab3a # v5.1.0
    - name: Configure uv
      run: |
        echo "UV_PYTHON_PREFERENCE=only-system" >> $GITHUB_ENV
        pin=${{ matrix.python-version }}
        echo "UV_PYTHON=${pin%-dev}" >> $GITHUB_ENV
        echo "UV_PRERELEASE=allow" >> $GITHUB_ENV
    - run: uv lock --upgrade
    - name: Run tests
      run: uv run --frozen --no-editable --group test pytest --color=yes

  tests_minimal_env:
    name: Test minimal requirements
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: astral-sh/setup-uv@887a942a15af3a7626099df99e897a18d9e5ab3a # v5.1.0
      with:
        python-version: 3.10.0
    - name: Run tests
      run: uv run --resolution=lowest-direct --no-editable --group test pytest --color=yes

  type-check:
    strategy:
      matrix:
        python-version:
        - '3.10'
        - '3.13'
        typechecker:
        - mypy
        - pyright

    runs-on: ubuntu-latest
    name: type check

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.python-version }}-${{ matrix.typechecker }}-typecheck
      cancel-in-progress: true

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: astral-sh/setup-uv@887a942a15af3a7626099df99e897a18d9e5ab3a # v5.1.0
    - name: Build
      run: uv sync -p ${{ matrix.python-version }} --group typecheck --no-editable
    - name: Typecheck
      run: uv run ${{ matrix.typechecker }} src

  docs:
    runs-on: ubuntu-latest
    name: docs

    concurrency:
      group: ${{ github.ref }}-docs
      cancel-in-progress: true

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: astral-sh/setup-uv@887a942a15af3a7626099df99e897a18d9e5ab3a # v5.1.0
    - name: Setup env
      run: |
        uv venv
        uv pip install -r docs/requirements.txt
    - name: Build
      run: |
        uv run mkdocs build
    - name: Upload artifacts
      uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4.5.0
      with:
        name: site
        path: site
